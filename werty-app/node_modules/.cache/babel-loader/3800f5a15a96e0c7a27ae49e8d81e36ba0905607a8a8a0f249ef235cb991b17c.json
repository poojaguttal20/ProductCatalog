{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pooja_guttal\\\\Desktop\\\\ProductCatalog-React\\\\werty-app\\\\src\\\\pages\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Link, useNavigation } from \"react-router-dom\";\nimport Error from \"../components/Error\";\nimport Input from \"../components/Input\";\nimport Validation from \"../components/Validation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const navigate = useNavigation();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [errorMessages, setErrorMessages] = useState({});\n  const clearError = () => {\n    setErrorMessages({});\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n    setErrorMessages(prevErrors => ({\n      ...prevErrors,\n      [name]: ''\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isFormEmpty = Object.values(formData).every(value => value.trim() === \"\");\n    if (isFormEmpty) {\n      setErrorMessages({\n        allfields: \"Please fill the details below\"\n      });\n      return;\n    }\n    let newError = {};\n    const isFormValid = Object.keys(formData).every(name => {\n      const value = formData[name];\n      if (value.trim() === \"\") {\n        newError = {\n          ...newError,\n          [name]: `${name.charAt(0).toUpperCase() + name.slice(1)} is required`\n        };\n        return false;\n      }\n      return true;\n    });\n    if (!isFormValid) {\n      setErrorMessages(newError);\n      return;\n    }\n    const ValidationErrors = {\n      email: /*#__PURE__*/_jsxDEV(Validation, {\n        name: \"email\",\n        value: formData.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 20\n      }, this),\n      password: /*#__PURE__*/_jsxDEV(Validation, {\n        name: \"password\",\n        value: formData.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 23\n      }, this)\n    };\n    setErrorMessages(ValidationErrors);\n    const storedData = JSON.parse(localStorage.getItem('signupData'));\n    const {\n      email,\n      password\n    } = formData;\n    if (storedData && storedData.email === email && storedData.password === password) {\n      navigate(\"/\");\n    } else {\n      setErrorMessages({\n        login: \"Invalid email or password\"\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4 d-flex justify-content-center\",\n    style: {\n      zIndex: 1,\n      position: \"relative\",\n      paddingBottom: \"80px\",\n      paddingTop: \"80px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-group p-4 border rounded\",\n      style: {\n        maxWidth: \"400px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center mb-4\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), errorMessages.allFields && /*#__PURE__*/_jsxDEV(Error, {\n        message: errorMessages.allFields\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 37\n      }, this), errorMessages.login && /*#__PURE__*/_jsxDEV(Error, {\n        message: errorMessages.login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"email\",\n        name: \"email\",\n        label: \"Email\",\n        value: formData.email,\n        onChange: handleChange,\n        errorMessage: errorMessages.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        name: \"password\",\n        label: \"Password\",\n        value: formData.password,\n        onChange: handleChange,\n        errorMessage: errorMessages.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-block button-style\",\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-3\",\n        children: [\"New User? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Signup here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"uKri5VgO2B4xXEB5uDQFlhEJ2Mg=\", false, function () {\n  return [useNavigation];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","Link","useNavigation","Error","Input","Validation","jsxDEV","_jsxDEV","Login","_s","navigate","formData","setFormData","email","password","errorMessages","setErrorMessages","clearError","handleChange","e","name","value","target","prevState","prevErrors","handleSubmit","preventDefault","isFormEmpty","Object","values","every","trim","allfields","newError","isFormValid","keys","charAt","toUpperCase","slice","ValidationErrors","fileName","_jsxFileName","lineNumber","columnNumber","storedData","JSON","parse","localStorage","getItem","login","className","style","zIndex","position","paddingBottom","paddingTop","children","maxWidth","allFields","message","type","label","onChange","errorMessage","to","_c","$RefreshReg$"],"sources":["C:/Users/pooja_guttal/Desktop/ProductCatalog-React/werty-app/src/pages/Login.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { Link, useNavigation } from \"react-router-dom\";\r\nimport Error from \"../components/Error\";\r\nimport Input from \"../components/Input\";\r\nimport Validation from \"../components/Validation\";\r\n\r\nexport default function Login() {\r\n  const navigate = useNavigation();\r\n  const [formData, setFormData] = useState({\r\n    email:'',\r\n    password:''\r\n  })\r\n\r\n  const [errorMessages, setErrorMessages] = useState({});\r\n\r\n  const clearError = ()=>{\r\n    setErrorMessages({});\r\n  }\r\n\r\n  const handleChange=(e)=>{\r\n    const {name, value} = e.target;\r\n    setFormData((prevState)=>({\r\n        ...prevState,\r\n        [name]: value\r\n    }))\r\n\r\n    setErrorMessages((prevErrors)=>({\r\n        ...prevErrors,\r\n        [name]:''\r\n    }));\r\n\r\n  }\r\n\r\n  const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n\r\n\r\n        const isFormEmpty = Object.values(formData).every((value) => value.trim()===\"\");\r\n        if(isFormEmpty){\r\n            setErrorMessages({allfields: \"Please fill the details below\"})\r\n            return\r\n        }\r\n\r\n        let newError={};\r\n\r\n        const isFormValid = Object.keys(formData).every((name)=>{\r\n            const value = formData[name];\r\n            if(value.trim() === \"\"){\r\n                newError={\r\n                    ...newError,\r\n                    [name]: `${name.charAt(0).toUpperCase() + name.slice(1)} is required`,\r\n                };\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n\r\n        if (!isFormValid){\r\n            setErrorMessages(newError);\r\n            return;\r\n        }\r\n\r\n        const ValidationErrors ={\r\n            email :<Validation name=\"email\" value ={formData.email}/>,\r\n            password :<Validation name=\"password\" value ={formData.password}/>\r\n\r\n        }\r\n\r\n        setErrorMessages(ValidationErrors);\r\n\r\n        const storedData = JSON.parse(localStorage.getItem('signupData'));\r\n        const {email, password} = formData;\r\n\r\n        if(storedData && (storedData.email === email  && storedData.password === password)){\r\n            navigate(\"/\");\r\n        }\r\n        else{\r\n            setErrorMessages({login: \"Invalid email or password\"})\r\n        }\r\n\r\n  }\r\n  return (\r\n    <div\r\n      className=\"container mt-4 d-flex justify-content-center\"\r\n      style={{\r\n        zIndex: 1,\r\n        position: \"relative\",\r\n        paddingBottom: \"80px\",\r\n        paddingTop: \"80px\",\r\n      }}\r\n    >\r\n      <form\r\n        className=\"form-group p-4 border rounded\"\r\n        style={{ maxWidth: \"400px\" }}\r\n      >\r\n    \r\n        <h2 className=\"text-center mb-4\">Login</h2>\r\n        {errorMessages.allFields && <Error message={errorMessages.allFields} />}\r\n        {errorMessages.login && <Error message={errorMessages.login} />}\r\n        <Input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          label=\"Email\"\r\n          value={formData.email}\r\n          onChange={handleChange}\r\n          errorMessage={errorMessages.email}\r\n        />\r\n        <Input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          value={formData.password}\r\n          onChange={handleChange}\r\n          errorMessage={errorMessages.password}\r\n        />\r\n        <button className=\"btn btn-block button-style\" type=\"submit\">\r\n          Login\r\n        </button>\r\n        <p className=\"mt-3\">\r\n          New User? <Link to=\"/\">Signup here</Link>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AACtD,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAMC,QAAQ,GAAGR,aAAa,CAAC,CAAC;EAChC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC;IACvCa,KAAK,EAAC,EAAE;IACRC,QAAQ,EAAC;EACX,CAAC,CAAC;EAEF,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEtD,MAAMiB,UAAU,GAAGA,CAAA,KAAI;IACrBD,gBAAgB,CAAC,CAAC,CAAC,CAAC;EACtB,CAAC;EAED,MAAME,YAAY,GAAEC,CAAC,IAAG;IACtB,MAAM;MAACC,IAAI;MAAEC;IAAK,CAAC,GAAGF,CAAC,CAACG,MAAM;IAC9BV,WAAW,CAAEW,SAAS,KAAI;MACtB,GAAGA,SAAS;MACZ,CAACH,IAAI,GAAGC;IACZ,CAAC,CAAC,CAAC;IAEHL,gBAAgB,CAAEQ,UAAU,KAAI;MAC5B,GAAGA,UAAU;MACb,CAACJ,IAAI,GAAE;IACX,CAAC,CAAC,CAAC;EAEL,CAAC;EAED,MAAMK,YAAY,GAAEN,CAAC,IAAG;IAClBA,CAAC,CAACO,cAAc,CAAC,CAAC;IAGlB,MAAMC,WAAW,GAAGC,MAAM,CAACC,MAAM,CAAClB,QAAQ,CAAC,CAACmB,KAAK,CAAET,KAAK,IAAKA,KAAK,CAACU,IAAI,CAAC,CAAC,KAAG,EAAE,CAAC;IAC/E,IAAGJ,WAAW,EAAC;MACXX,gBAAgB,CAAC;QAACgB,SAAS,EAAE;MAA+B,CAAC,CAAC;MAC9D;IACJ;IAEA,IAAIC,QAAQ,GAAC,CAAC,CAAC;IAEf,MAAMC,WAAW,GAAGN,MAAM,CAACO,IAAI,CAACxB,QAAQ,CAAC,CAACmB,KAAK,CAAEV,IAAI,IAAG;MACpD,MAAMC,KAAK,GAAGV,QAAQ,CAACS,IAAI,CAAC;MAC5B,IAAGC,KAAK,CAACU,IAAI,CAAC,CAAC,KAAK,EAAE,EAAC;QACnBE,QAAQ,GAAC;UACL,GAAGA,QAAQ;UACX,CAACb,IAAI,GAAI,GAAEA,IAAI,CAACgB,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGjB,IAAI,CAACkB,KAAK,CAAC,CAAC,CAAE;QAC5D,CAAC;QACD,OAAO,KAAK;MAChB;MACA,OAAO,IAAI;IACf,CAAC,CAAC;IAEF,IAAI,CAACJ,WAAW,EAAC;MACblB,gBAAgB,CAACiB,QAAQ,CAAC;MAC1B;IACJ;IAEA,MAAMM,gBAAgB,GAAE;MACpB1B,KAAK,eAAEN,OAAA,CAACF,UAAU;QAACe,IAAI,EAAC,OAAO;QAACC,KAAK,EAAGV,QAAQ,CAACE;MAAM;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;MACzD7B,QAAQ,eAAEP,OAAA,CAACF,UAAU;QAACe,IAAI,EAAC,UAAU;QAACC,KAAK,EAAGV,QAAQ,CAACG;MAAS;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAErE,CAAC;IAED3B,gBAAgB,CAACuB,gBAAgB,CAAC;IAElC,MAAMK,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC;IACjE,MAAM;MAACnC,KAAK;MAAEC;IAAQ,CAAC,GAAGH,QAAQ;IAElC,IAAGiC,UAAU,IAAKA,UAAU,CAAC/B,KAAK,KAAKA,KAAK,IAAK+B,UAAU,CAAC9B,QAAQ,KAAKA,QAAS,EAAC;MAC/EJ,QAAQ,CAAC,GAAG,CAAC;IACjB,CAAC,MACG;MACAM,gBAAgB,CAAC;QAACiC,KAAK,EAAE;MAA2B,CAAC,CAAC;IAC1D;EAEN,CAAC;EACD,oBACE1C,OAAA;IACE2C,SAAS,EAAC,8CAA8C;IACxDC,KAAK,EAAE;MACLC,MAAM,EAAE,CAAC;MACTC,QAAQ,EAAE,UAAU;MACpBC,aAAa,EAAE,MAAM;MACrBC,UAAU,EAAE;IACd,CAAE;IAAAC,QAAA,eAEFjD,OAAA;MACE2C,SAAS,EAAC,+BAA+B;MACzCC,KAAK,EAAE;QAAEM,QAAQ,EAAE;MAAQ,CAAE;MAAAD,QAAA,gBAG7BjD,OAAA;QAAI2C,SAAS,EAAC,kBAAkB;QAAAM,QAAA,EAAC;MAAK;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC1C5B,aAAa,CAAC2C,SAAS,iBAAInD,OAAA,CAACJ,KAAK;QAACwD,OAAO,EAAE5C,aAAa,CAAC2C;MAAU;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACtE5B,aAAa,CAACkC,KAAK,iBAAI1C,OAAA,CAACJ,KAAK;QAACwD,OAAO,EAAE5C,aAAa,CAACkC;MAAM;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/DpC,OAAA,CAACH,KAAK;QACJwD,IAAI,EAAC,OAAO;QACZxC,IAAI,EAAC,OAAO;QACZyC,KAAK,EAAC,OAAO;QACbxC,KAAK,EAAEV,QAAQ,CAACE,KAAM;QACtBiD,QAAQ,EAAE5C,YAAa;QACvB6C,YAAY,EAAEhD,aAAa,CAACF;MAAM;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,eACFpC,OAAA,CAACH,KAAK;QACJwD,IAAI,EAAC,UAAU;QACfxC,IAAI,EAAC,UAAU;QACfyC,KAAK,EAAC,UAAU;QAChBxC,KAAK,EAAEV,QAAQ,CAACG,QAAS;QACzBgD,QAAQ,EAAE5C,YAAa;QACvB6C,YAAY,EAAEhD,aAAa,CAACD;MAAS;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC,eACFpC,OAAA;QAAQ2C,SAAS,EAAC,4BAA4B;QAACU,IAAI,EAAC,QAAQ;QAAAJ,QAAA,EAAC;MAE7D;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTpC,OAAA;QAAG2C,SAAS,EAAC,MAAM;QAAAM,QAAA,GAAC,YACR,eAAAjD,OAAA,CAACN,IAAI;UAAC+D,EAAE,EAAC,GAAG;UAAAR,QAAA,EAAC;QAAW;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAClC,EAAA,CAtHuBD,KAAK;EAAA,QACVN,aAAa;AAAA;AAAA+D,EAAA,GADRzD,KAAK;AAAA,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}