{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pooja_guttal\\\\Desktop\\\\ProductCatalog-React\\\\werty-app\\\\src\\\\pages\\\\Signup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Input from \"../components/Input\";\nimport \"./Signup.css\";\nimport Validation from \"../components/Validation\";\nimport Error from \"../components/Error\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Signup() {\n  _s();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    mobile: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const [errorMessages, setErrorMessages] = useState({});\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Initialize error object\n    let newErrors = {};\n    // Check if all fields are filled\n    const isFormValid = Object.keys(formData).every(name => {\n      const value = formData[name];\n      if (value.trim() === \"\") {\n        newErrors = {\n          ...newErrors,\n          [name]: `${name.charAt(0).toUpperCase() + name.slice(1)} is required`\n        };\n        return false;\n      }\n      return true;\n    });\n    if (!isFormValid) {\n      setErrorMessages(newErrors);\n      return;\n    }\n    // Check for validation errors\n    const validationErrors = {\n      name: Validation({\n        name: \"name\",\n        value: formData.name\n      }),\n      mobile: Validation({\n        name: \"mobile\",\n        value: formData.mobile\n      }),\n      email: Validation({\n        name: \"email\",\n        value: formData.email\n      }),\n      password: Validation({\n        name: \"password\",\n        value: formData.password\n      })\n    };\n    // Update error messages state\n    setErrorMessages(validationErrors);\n    // Check if there are any errors before submitting\n    if (Object.values(validationErrors).every(error => error === \"\")) {\n      localStorage.setItem(\"signupData\", JSON.stringify(formData));\n      setFormData({\n        name: \"\",\n        mobile: \"\",\n        email: \"\",\n        password: \"\"\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4 d-flex justify-content-center\",\n    style: {\n      zIndex: 1,\n      position: \"relative\",\n      paddingBottom: \"80px\",\n      paddingTop: \"80px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-group p-4 border rounded\",\n      style: {\n        maxWidth: \"400px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center mb-4\",\n        children: \"SignUp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 1\n      }, this), Object.keys(errorMessages).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: Object.keys(errorMessages).map((fieldName, index) => /*#__PURE__*/_jsxDEV(Error, {\n          message: errorMessages[fieldName]\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 1\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        label: \"Name\",\n        name: \"name\",\n        value: formData.name,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"number\",\n        label: \"Mobile No\",\n        name: \"mobile\",\n        value: formData.mobile,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"email\",\n        label: \"Email\",\n        name: \"email\",\n        value: formData.email,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        label: \"Password\",\n        name: \"password\",\n        value: formData.password,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary btn-block mt-3\",\n        onClick: handleSubmit,\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-3\",\n        children: [\"Already User? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Login here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 1\n  }, this);\n}\n_s(Signup, \"16NXUIvQqNHSZ1C1UCtdafzCQ4c=\");\n_c = Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","Link","Input","Validation","Error","jsxDEV","_jsxDEV","Signup","_s","formData","setFormData","name","mobile","email","password","errorMessages","setErrorMessages","handleChange","e","value","target","prevState","handleSubmit","preventDefault","newErrors","isFormValid","Object","keys","every","trim","charAt","toUpperCase","slice","validationErrors","values","error","localStorage","setItem","JSON","stringify","className","style","zIndex","position","paddingBottom","paddingTop","children","maxWidth","fileName","_jsxFileName","lineNumber","columnNumber","length","map","fieldName","index","message","type","label","onChange","required","onClick","to","_c","$RefreshReg$"],"sources":["C:/Users/pooja_guttal/Desktop/ProductCatalog-React/werty-app/src/pages/Signup.jsx"],"sourcesContent":["\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Input from \"../components/Input\";\r\nimport \"./Signup.css\";\r\nimport Validation from \"../components/Validation\";\r\nimport Error from \"../components/Error\";\r\nexport default function Signup() {\r\n const [formData, setFormData] = useState({\r\n   name: \"\",\r\n   mobile: \"\",\r\n   email: \"\",\r\n   password: \"\",\r\n });\r\n const [errorMessages, setErrorMessages] = useState({});\r\n const handleChange = (e) => {\r\n   const { name, value } = e.target;\r\n   setFormData((prevState) => ({\r\n     ...prevState,\r\n     [name]: value,\r\n   }));\r\n };\r\n const handleSubmit = (e) => {\r\n   e.preventDefault();\r\n   // Initialize error object\r\n   let newErrors = {};\r\n   // Check if all fields are filled\r\n   const isFormValid = Object.keys(formData).every((name) => {\r\n     const value = formData[name];\r\n     if (value.trim() === \"\") {\r\n       newErrors = {\r\n         ...newErrors,\r\n         [name]: `${name.charAt(0).toUpperCase() + name.slice(1)} is required`,\r\n       };\r\n       return false;\r\n     }\r\n     return true;\r\n   });\r\n   if (!isFormValid) {\r\n     setErrorMessages(newErrors);\r\n     return;\r\n   }\r\n   // Check for validation errors\r\n   const validationErrors = {\r\n     name: Validation({ name: \"name\", value: formData.name }),\r\n     mobile: Validation({ name: \"mobile\", value: formData.mobile }),\r\n     email: Validation({ name: \"email\", value: formData.email }),\r\n     password: Validation({ name: \"password\", value: formData.password }),\r\n   };\r\n   // Update error messages state\r\n   setErrorMessages(validationErrors);\r\n   // Check if there are any errors before submitting\r\n   if (Object.values(validationErrors).every((error) => error === \"\")) {\r\n     localStorage.setItem(\"signupData\", JSON.stringify(formData));\r\n     setFormData({\r\n       name: \"\",\r\n       mobile: \"\",\r\n       email: \"\",\r\n       password: \"\",\r\n     });\r\n   }\r\n };\r\n return (\r\n<div\r\n     className=\"container mt-4 d-flex justify-content-center\"\r\n     style={{\r\n       zIndex: 1,\r\n       position: \"relative\",\r\n       paddingBottom: \"80px\",\r\n       paddingTop: \"80px\",\r\n     }}\r\n>\r\n<form className=\"form-group p-4 border rounded\" style={{ maxWidth: \"400px\" }}>\r\n<h2 className=\"text-center mb-4\">SignUp</h2>\r\n       {Object.keys(errorMessages).length > 0 && (\r\n<div>\r\n           {Object.keys(errorMessages).map((fieldName, index) => (\r\n<Error key={index} message={errorMessages[fieldName]} />\r\n           ))}\r\n</div>\r\n       )}\r\n<Input type=\"text\" label=\"Name\" name=\"name\" value={formData.name} onChange={handleChange} required />\r\n<Input type=\"number\" label=\"Mobile No\" name=\"mobile\" value={formData.mobile} onChange={handleChange} required />\r\n<Input type=\"email\" label=\"Email\" name=\"email\" value={formData.email} onChange={handleChange} required />\r\n<Input type=\"password\" label=\"Password\" name=\"password\" value={formData.password} onChange={handleChange} required />\r\n<button type=\"submit\" className=\"btn btn-primary btn-block mt-3\" onClick={handleSubmit}>\r\n         Sign up\r\n</button>\r\n<p className=\"mt-3\">\r\n         Already User? <Link to=\"/login\">Login here</Link>\r\n</p>\r\n</form>\r\n</div>\r\n );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}